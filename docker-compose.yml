version: "2"
services:
  nginx:
    build: ./nginx
    volumes:
      - ./app:/app
    links:
      - app
    ports:
      - "4500:80"

  postgres:
    image: postgres:10.1
    volumes:
      - ./db-data:/var/lib/postgresql/data/
    env_file: .env

  redis:
    image: redis:5.0

  app:
    build:
      context: ./app
      args:
        - DJANGO_ENV=dev
    command: sh ./scripts/app.sh
    volumes:
      - ./app:/app
    restart: on-failure
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
    links:
      - redis
      - postgres

  worker:
    build:
      context: ./app
      args:
        - DJANGO_ENV=dev
    command: celery -A backend worker -l info
    volumes:
      - ./app:/app
    restart: on-failure
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
    links:
      - redis
      - postgres

  beat:
    build:
      context: ./app
      args:
        - DJANGO_ENV=dev
    command: celery -A backend beat -l info --pidfile=/home/app/celery.pid
    volumes:
      - ./app:/app
    restart: on-failure
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
    links:
      - redis
      - postgres

  websockets_worker:
    build:
      context: ./app
      args:
        - DJANGO_ENV=dev
    command: python3 manage.py runworker --only-channels=http.* --only-channels=websocket.* -v2
    volumes:
      - ./app:/app
    restart: on-failure
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
    links:
      - app
      - redis

  daphne:
    build:
      context: ./app
      args:
        - DJANGO_ENV=dev
    command: daphne -b 0.0.0.0 -p 8001 backend.asgi:channel_layer
    volumes:
      - ./app:/app
    restart: on-failure
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
    links:
      - app
      - redis
